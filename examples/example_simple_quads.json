{"shaders":[{"source":"// The contents of this tab will be prefixed in all shaders.\n"},{"source":"#pragma size 128 128\n\nvoid mainSimulation(out vec4 oPosition, out vec4 oColor, out vec4 oData2, out vec4 oData3, out vec4 oData4, out vec4 oData5) {\n  ivec2 coord = ivec2(gl_FragCoord);\n  int id = iSize.x * coord.y + coord.x;\n\n  float scale = 1.0 / float(max(iSize.x, iSize.y));\n  vec2 pos = (gl_FragCoord.xy - vec2(iSize) * 0.5) * scale;\n  oPosition = vec4(pos, -1.25, 1.0);\n\n  vec2 texcoord = gl_FragCoord.xy / vec2(iSize);\n  oColor = vec4(texcoord, 0.0, 1.0);\n}\n"},{"source":"#pragma vertexCount 6\n\nconst vec2 quadVertices[6] = vec2[6](\n  vec2(-1.0, -1.0),\n  vec2(-1.0, 1.0),\n  vec2(1.0, -1.0),\n  vec2(1.0, -1.0),\n  vec2(-1.0, 1.0),\n  vec2(1.0, 1.0)\n);\n\nout vec4 vColor;\n\nvoid mainVertex(out vec4 oPosition) {\n  int instanceID = gl_VertexID / 6;\n  ivec2 coord = ivec2(instanceID % iSize.x, instanceID / iSize.x);\n\n  oPosition = texelFetch(iFragData[0], coord, 0);\n  oPosition.xy += quadVertices[gl_VertexID % 6] * 0.0015;\n\n  oPosition = iModelViewProjection * oPosition;\n\n  vColor = texelFetch(iFragData[1], coord, 0);\n}\n"},{"source":"in vec4 vColor;\n\nvoid mainFragment(out vec4 oColor) {\n  oColor = vColor;\n}\n"}]}